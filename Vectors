#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void print_all(vector < int >& v){
   cout << "v. size ()= " << v. size () << endl ;
   for( vector < int >:: iterator it=v.begin (); it !=v.end (); ++it) {
        cout << (* it) << " ";
   }
   cout << endl ;
}

bool test(vector<int> nums){
    std::sort(nums.begin(), nums.end());
    for(int i = 0; i < nums.size() - 1; i++){
        if (nums[i + 1] != (nums[i] + 1))
		{
			return false;
		}
	}
	return true;
}

vector<string> test2(vector<string> colors) {//Capitalize the first character of each vector element
    for(int i=0;i<colors.size();i++){
       colors[0][0]=toupper(colors[0][0]);
       colors[i][0]=toupper(colors[i][0]);
       for(int l=1;l<colors[i].size();l++){
          colors[i][l] = tolower(colors[i][l]);
       }
  }
  return colors;
}

int main()
{
    const int SIZE =7;
    int arr1 [ SIZE ]={1, 2 ,5, 7, 4, 3, 6};
    int arr2 [ SIZE ]={1, 2 ,5, 0, 3, 6, 7};
    vector<int> v1( arr1 , arr1 + SIZE );
    vector<int> v2( arr2 , arr2 + SIZE );
    print_all(v1);
    cout << test(v1) << endl;
    print_all(v2);
    cout << test(v2);
    
    vector<string> colors = {"red", "green", "black", "white", "Pink"};
    cout << "Original Vector elements:\n";
	for (string c : colors){
         cout << c << " ";
	}
    vector<string> result = test2(colors);
    cout << "\n\nCapitalize the first character of each vector element:\n";
    for (string c : result){
        cout << c << " ";
    }

    return 0;
}
